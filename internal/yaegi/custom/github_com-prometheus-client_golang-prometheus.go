// Code generated by 'yaegi extract github.com/prometheus/client_golang/prometheus'. DO NOT EDIT.

package custom

import (
	"github.com/prometheus/client_golang/prometheus"
	"github.com/prometheus/client_model/go"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["github.com/prometheus/client_golang/prometheus/prometheus"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"BuildFQName":                            reflect.ValueOf(prometheus.BuildFQName),
		"CounterMetricTypePtr":                   reflect.ValueOf(&prometheus.CounterMetricTypePtr).Elem(),
		"CounterValue":                           reflect.ValueOf(prometheus.CounterValue),
		"DefAgeBuckets":                          reflect.ValueOf(constant.MakeFromLiteral("5", token.INT, 0)),
		"DefBuckets":                             reflect.ValueOf(&prometheus.DefBuckets).Elem(),
		"DefBufCap":                              reflect.ValueOf(constant.MakeFromLiteral("500", token.INT, 0)),
		"DefMaxAge":                              reflect.ValueOf(prometheus.DefMaxAge),
		"DefNativeHistogramZeroThreshold":        reflect.ValueOf(constant.MakeFromLiteral("2.93873587705571899999999999999999999999999999999999999986330024775561805918350826938746001907652034167631969127983801159339938203560032435879600883644709162860760288102382334893407e-39", token.FLOAT, 0)),
		"DefaultGatherer":                        reflect.ValueOf(&prometheus.DefaultGatherer).Elem(),
		"DefaultRegisterer":                      reflect.ValueOf(&prometheus.DefaultRegisterer).Elem(),
		"DescribeByCollect":                      reflect.ValueOf(prometheus.DescribeByCollect),
		"ExemplarMaxRunes":                       reflect.ValueOf(constant.MakeFromLiteral("128", token.INT, 0)),
		"ExponentialBuckets":                     reflect.ValueOf(prometheus.ExponentialBuckets),
		"ExponentialBucketsRange":                reflect.ValueOf(prometheus.ExponentialBucketsRange),
		"GaugeMetricTypePtr":                     reflect.ValueOf(&prometheus.GaugeMetricTypePtr).Elem(),
		"GaugeValue":                             reflect.ValueOf(prometheus.GaugeValue),
		"LinearBuckets":                          reflect.ValueOf(prometheus.LinearBuckets),
		"MakeLabelPairs":                         reflect.ValueOf(prometheus.MakeLabelPairs),
		"MustNewConstHistogram":                  reflect.ValueOf(prometheus.MustNewConstHistogram),
		"MustNewConstMetric":                     reflect.ValueOf(prometheus.MustNewConstMetric),
		"MustNewConstMetricWithCreatedTimestamp": reflect.ValueOf(prometheus.MustNewConstMetricWithCreatedTimestamp),
		"MustNewConstSummary":                    reflect.ValueOf(prometheus.MustNewConstSummary),
		"MustNewMetricWithExemplars":             reflect.ValueOf(prometheus.MustNewMetricWithExemplars),
		"MustRegister":                           reflect.ValueOf(prometheus.MustRegister),
		"NativeHistogramZeroThresholdZero":       reflect.ValueOf(constant.MakeFromLiteral("-1", token.INT, 0)),
		"NewBuildInfoCollector":                  reflect.ValueOf(prometheus.NewBuildInfoCollector),
		"NewConstHistogram":                      reflect.ValueOf(prometheus.NewConstHistogram),
		"NewConstMetric":                         reflect.ValueOf(prometheus.NewConstMetric),
		"NewConstMetricWithCreatedTimestamp":     reflect.ValueOf(prometheus.NewConstMetricWithCreatedTimestamp),
		"NewConstSummary":                        reflect.ValueOf(prometheus.NewConstSummary),
		"NewCounter":                             reflect.ValueOf(prometheus.NewCounter),
		"NewCounterFunc":                         reflect.ValueOf(prometheus.NewCounterFunc),
		"NewCounterVec":                          reflect.ValueOf(prometheus.NewCounterVec),
		"NewDesc":                                reflect.ValueOf(prometheus.NewDesc),
		"NewExpvarCollector":                     reflect.ValueOf(prometheus.NewExpvarCollector),
		"NewGauge":                               reflect.ValueOf(prometheus.NewGauge),
		"NewGaugeFunc":                           reflect.ValueOf(prometheus.NewGaugeFunc),
		"NewGaugeVec":                            reflect.ValueOf(prometheus.NewGaugeVec),
		"NewGoCollector":                         reflect.ValueOf(prometheus.NewGoCollector),
		"NewHistogram":                           reflect.ValueOf(prometheus.NewHistogram),
		"NewHistogramVec":                        reflect.ValueOf(prometheus.NewHistogramVec),
		"NewInvalidDesc":                         reflect.ValueOf(prometheus.NewInvalidDesc),
		"NewInvalidMetric":                       reflect.ValueOf(prometheus.NewInvalidMetric),
		"NewMetricVec":                           reflect.ValueOf(prometheus.NewMetricVec),
		"NewMetricWithExemplars":                 reflect.ValueOf(prometheus.NewMetricWithExemplars),
		"NewMetricWithTimestamp":                 reflect.ValueOf(prometheus.NewMetricWithTimestamp),
		"NewMultiTRegistry":                      reflect.ValueOf(prometheus.NewMultiTRegistry),
		"NewPedanticRegistry":                    reflect.ValueOf(prometheus.NewPedanticRegistry),
		"NewPidFileFn":                           reflect.ValueOf(prometheus.NewPidFileFn),
		"NewProcessCollector":                    reflect.ValueOf(prometheus.NewProcessCollector),
		"NewRegistry":                            reflect.ValueOf(prometheus.NewRegistry),
		"NewSummary":                             reflect.ValueOf(prometheus.NewSummary),
		"NewSummaryVec":                          reflect.ValueOf(prometheus.NewSummaryVec),
		"NewTimer":                               reflect.ValueOf(prometheus.NewTimer),
		"NewUntypedFunc":                         reflect.ValueOf(prometheus.NewUntypedFunc),
		"Register":                               reflect.ValueOf(prometheus.Register),
		"ToTransactionalGatherer":                reflect.ValueOf(prometheus.ToTransactionalGatherer),
		"Unregister":                             reflect.ValueOf(prometheus.Unregister),
		"UntypedMetricTypePtr":                   reflect.ValueOf(&prometheus.UntypedMetricTypePtr).Elem(),
		"UntypedValue":                           reflect.ValueOf(prometheus.UntypedValue),
		"V2":                                     reflect.ValueOf(&prometheus.V2).Elem(),
		"WrapRegistererWith":                     reflect.ValueOf(prometheus.WrapRegistererWith),
		"WrapRegistererWithPrefix":               reflect.ValueOf(prometheus.WrapRegistererWithPrefix),
		"WriteToTextfile":                        reflect.ValueOf(prometheus.WriteToTextfile),

		// type definitions
		"AlreadyRegisteredError": reflect.ValueOf((*prometheus.AlreadyRegisteredError)(nil)),
		"Collector":              reflect.ValueOf((*prometheus.Collector)(nil)),
		"ConstrainableLabels":    reflect.ValueOf((*prometheus.ConstrainableLabels)(nil)),
		"ConstrainedLabel":       reflect.ValueOf((*prometheus.ConstrainedLabel)(nil)),
		"ConstrainedLabels":      reflect.ValueOf((*prometheus.ConstrainedLabels)(nil)),
		"Counter":                reflect.ValueOf((*prometheus.Counter)(nil)),
		"CounterFunc":            reflect.ValueOf((*prometheus.CounterFunc)(nil)),
		"CounterOpts":            reflect.ValueOf((*prometheus.CounterOpts)(nil)),
		"CounterVec":             reflect.ValueOf((*prometheus.CounterVec)(nil)),
		"CounterVecOpts":         reflect.ValueOf((*prometheus.CounterVecOpts)(nil)),
		"Desc":                   reflect.ValueOf((*prometheus.Desc)(nil)),
		"Exemplar":               reflect.ValueOf((*prometheus.Exemplar)(nil)),
		"ExemplarAdder":          reflect.ValueOf((*prometheus.ExemplarAdder)(nil)),
		"ExemplarObserver":       reflect.ValueOf((*prometheus.ExemplarObserver)(nil)),
		"Gatherer":               reflect.ValueOf((*prometheus.Gatherer)(nil)),
		"GathererFunc":           reflect.ValueOf((*prometheus.GathererFunc)(nil)),
		"Gatherers":              reflect.ValueOf((*prometheus.Gatherers)(nil)),
		"Gauge":                  reflect.ValueOf((*prometheus.Gauge)(nil)),
		"GaugeFunc":              reflect.ValueOf((*prometheus.GaugeFunc)(nil)),
		"GaugeOpts":              reflect.ValueOf((*prometheus.GaugeOpts)(nil)),
		"GaugeVec":               reflect.ValueOf((*prometheus.GaugeVec)(nil)),
		"GaugeVecOpts":           reflect.ValueOf((*prometheus.GaugeVecOpts)(nil)),
		"Histogram":              reflect.ValueOf((*prometheus.Histogram)(nil)),
		"HistogramOpts":          reflect.ValueOf((*prometheus.HistogramOpts)(nil)),
		"HistogramVec":           reflect.ValueOf((*prometheus.HistogramVec)(nil)),
		"HistogramVecOpts":       reflect.ValueOf((*prometheus.HistogramVecOpts)(nil)),
		"LabelConstraint":        reflect.ValueOf((*prometheus.LabelConstraint)(nil)),
		"Labels":                 reflect.ValueOf((*prometheus.Labels)(nil)),
		"Metric":                 reflect.ValueOf((*prometheus.Metric)(nil)),
		"MetricVec":              reflect.ValueOf((*prometheus.MetricVec)(nil)),
		"MultiError":             reflect.ValueOf((*prometheus.MultiError)(nil)),
		"MultiTRegistry":         reflect.ValueOf((*prometheus.MultiTRegistry)(nil)),
		"Observer":               reflect.ValueOf((*prometheus.Observer)(nil)),
		"ObserverFunc":           reflect.ValueOf((*prometheus.ObserverFunc)(nil)),
		"ObserverVec":            reflect.ValueOf((*prometheus.ObserverVec)(nil)),
		"Opts":                   reflect.ValueOf((*prometheus.Opts)(nil)),
		"ProcessCollectorOpts":   reflect.ValueOf((*prometheus.ProcessCollectorOpts)(nil)),
		"Registerer":             reflect.ValueOf((*prometheus.Registerer)(nil)),
		"Registry":               reflect.ValueOf((*prometheus.Registry)(nil)),
		"Summary":                reflect.ValueOf((*prometheus.Summary)(nil)),
		"SummaryOpts":            reflect.ValueOf((*prometheus.SummaryOpts)(nil)),
		"SummaryVec":             reflect.ValueOf((*prometheus.SummaryVec)(nil)),
		"SummaryVecOpts":         reflect.ValueOf((*prometheus.SummaryVecOpts)(nil)),
		"Timer":                  reflect.ValueOf((*prometheus.Timer)(nil)),
		"TransactionalGatherer":  reflect.ValueOf((*prometheus.TransactionalGatherer)(nil)),
		"UnconstrainedLabels":    reflect.ValueOf((*prometheus.UnconstrainedLabels)(nil)),
		"UntypedFunc":            reflect.ValueOf((*prometheus.UntypedFunc)(nil)),
		"UntypedOpts":            reflect.ValueOf((*prometheus.UntypedOpts)(nil)),
		"ValueType":              reflect.ValueOf((*prometheus.ValueType)(nil)),

		// interface wrapper definitions
		"_Collector":             reflect.ValueOf((*_github_com_prometheus_client_golang_prometheus_Collector)(nil)),
		"_ConstrainableLabels":   reflect.ValueOf((*_github_com_prometheus_client_golang_prometheus_ConstrainableLabels)(nil)),
		"_Counter":               reflect.ValueOf((*_github_com_prometheus_client_golang_prometheus_Counter)(nil)),
		"_CounterFunc":           reflect.ValueOf((*_github_com_prometheus_client_golang_prometheus_CounterFunc)(nil)),
		"_ExemplarAdder":         reflect.ValueOf((*_github_com_prometheus_client_golang_prometheus_ExemplarAdder)(nil)),
		"_ExemplarObserver":      reflect.ValueOf((*_github_com_prometheus_client_golang_prometheus_ExemplarObserver)(nil)),
		"_Gatherer":              reflect.ValueOf((*_github_com_prometheus_client_golang_prometheus_Gatherer)(nil)),
		"_Gauge":                 reflect.ValueOf((*_github_com_prometheus_client_golang_prometheus_Gauge)(nil)),
		"_GaugeFunc":             reflect.ValueOf((*_github_com_prometheus_client_golang_prometheus_GaugeFunc)(nil)),
		"_Histogram":             reflect.ValueOf((*_github_com_prometheus_client_golang_prometheus_Histogram)(nil)),
		"_Metric":                reflect.ValueOf((*_github_com_prometheus_client_golang_prometheus_Metric)(nil)),
		"_Observer":              reflect.ValueOf((*_github_com_prometheus_client_golang_prometheus_Observer)(nil)),
		"_ObserverVec":           reflect.ValueOf((*_github_com_prometheus_client_golang_prometheus_ObserverVec)(nil)),
		"_Registerer":            reflect.ValueOf((*_github_com_prometheus_client_golang_prometheus_Registerer)(nil)),
		"_Summary":               reflect.ValueOf((*_github_com_prometheus_client_golang_prometheus_Summary)(nil)),
		"_TransactionalGatherer": reflect.ValueOf((*_github_com_prometheus_client_golang_prometheus_TransactionalGatherer)(nil)),
		"_UntypedFunc":           reflect.ValueOf((*_github_com_prometheus_client_golang_prometheus_UntypedFunc)(nil)),
	}
}

// _github_com_prometheus_client_golang_prometheus_Collector is an interface wrapper for Collector type
type _github_com_prometheus_client_golang_prometheus_Collector struct {
	IValue    interface{}
	WCollect  func(a0 chan<- prometheus.Metric)
	WDescribe func(a0 chan<- *prometheus.Desc)
}

func (W _github_com_prometheus_client_golang_prometheus_Collector) Collect(a0 chan<- prometheus.Metric) {
	W.WCollect(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_Collector) Describe(a0 chan<- *prometheus.Desc) {
	W.WDescribe(a0)
}

// _github_com_prometheus_client_golang_prometheus_ConstrainableLabels is an interface wrapper for ConstrainableLabels type
type _github_com_prometheus_client_golang_prometheus_ConstrainableLabels struct {
	IValue interface{}
}

// _github_com_prometheus_client_golang_prometheus_Counter is an interface wrapper for Counter type
type _github_com_prometheus_client_golang_prometheus_Counter struct {
	IValue    interface{}
	WAdd      func(a0 float64)
	WCollect  func(a0 chan<- prometheus.Metric)
	WDesc     func() *prometheus.Desc
	WDescribe func(a0 chan<- *prometheus.Desc)
	WInc      func()
	WWrite    func(a0 *io_prometheus_client.Metric) error
}

func (W _github_com_prometheus_client_golang_prometheus_Counter) Add(a0 float64) {
	W.WAdd(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_Counter) Collect(a0 chan<- prometheus.Metric) {
	W.WCollect(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_Counter) Desc() *prometheus.Desc {
	return W.WDesc()
}
func (W _github_com_prometheus_client_golang_prometheus_Counter) Describe(a0 chan<- *prometheus.Desc) {
	W.WDescribe(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_Counter) Inc() {
	W.WInc()
}
func (W _github_com_prometheus_client_golang_prometheus_Counter) Write(a0 *io_prometheus_client.Metric) error {
	return W.WWrite(a0)
}

// _github_com_prometheus_client_golang_prometheus_CounterFunc is an interface wrapper for CounterFunc type
type _github_com_prometheus_client_golang_prometheus_CounterFunc struct {
	IValue    interface{}
	WCollect  func(a0 chan<- prometheus.Metric)
	WDesc     func() *prometheus.Desc
	WDescribe func(a0 chan<- *prometheus.Desc)
	WWrite    func(a0 *io_prometheus_client.Metric) error
}

func (W _github_com_prometheus_client_golang_prometheus_CounterFunc) Collect(a0 chan<- prometheus.Metric) {
	W.WCollect(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_CounterFunc) Desc() *prometheus.Desc {
	return W.WDesc()
}
func (W _github_com_prometheus_client_golang_prometheus_CounterFunc) Describe(a0 chan<- *prometheus.Desc) {
	W.WDescribe(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_CounterFunc) Write(a0 *io_prometheus_client.Metric) error {
	return W.WWrite(a0)
}

// _github_com_prometheus_client_golang_prometheus_ExemplarAdder is an interface wrapper for ExemplarAdder type
type _github_com_prometheus_client_golang_prometheus_ExemplarAdder struct {
	IValue           interface{}
	WAddWithExemplar func(value float64, exemplar prometheus.Labels)
}

func (W _github_com_prometheus_client_golang_prometheus_ExemplarAdder) AddWithExemplar(value float64, exemplar prometheus.Labels) {
	W.WAddWithExemplar(value, exemplar)
}

// _github_com_prometheus_client_golang_prometheus_ExemplarObserver is an interface wrapper for ExemplarObserver type
type _github_com_prometheus_client_golang_prometheus_ExemplarObserver struct {
	IValue               interface{}
	WObserveWithExemplar func(value float64, exemplar prometheus.Labels)
}

func (W _github_com_prometheus_client_golang_prometheus_ExemplarObserver) ObserveWithExemplar(value float64, exemplar prometheus.Labels) {
	W.WObserveWithExemplar(value, exemplar)
}

// _github_com_prometheus_client_golang_prometheus_Gatherer is an interface wrapper for Gatherer type
type _github_com_prometheus_client_golang_prometheus_Gatherer struct {
	IValue  interface{}
	WGather func() ([]*io_prometheus_client.MetricFamily, error)
}

func (W _github_com_prometheus_client_golang_prometheus_Gatherer) Gather() ([]*io_prometheus_client.MetricFamily, error) {
	return W.WGather()
}

// _github_com_prometheus_client_golang_prometheus_Gauge is an interface wrapper for Gauge type
type _github_com_prometheus_client_golang_prometheus_Gauge struct {
	IValue            interface{}
	WAdd              func(a0 float64)
	WCollect          func(a0 chan<- prometheus.Metric)
	WDec              func()
	WDesc             func() *prometheus.Desc
	WDescribe         func(a0 chan<- *prometheus.Desc)
	WInc              func()
	WSet              func(a0 float64)
	WSetToCurrentTime func()
	WSub              func(a0 float64)
	WWrite            func(a0 *io_prometheus_client.Metric) error
}

func (W _github_com_prometheus_client_golang_prometheus_Gauge) Add(a0 float64) {
	W.WAdd(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_Gauge) Collect(a0 chan<- prometheus.Metric) {
	W.WCollect(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_Gauge) Dec() {
	W.WDec()
}
func (W _github_com_prometheus_client_golang_prometheus_Gauge) Desc() *prometheus.Desc {
	return W.WDesc()
}
func (W _github_com_prometheus_client_golang_prometheus_Gauge) Describe(a0 chan<- *prometheus.Desc) {
	W.WDescribe(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_Gauge) Inc() {
	W.WInc()
}
func (W _github_com_prometheus_client_golang_prometheus_Gauge) Set(a0 float64) {
	W.WSet(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_Gauge) SetToCurrentTime() {
	W.WSetToCurrentTime()
}
func (W _github_com_prometheus_client_golang_prometheus_Gauge) Sub(a0 float64) {
	W.WSub(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_Gauge) Write(a0 *io_prometheus_client.Metric) error {
	return W.WWrite(a0)
}

// _github_com_prometheus_client_golang_prometheus_GaugeFunc is an interface wrapper for GaugeFunc type
type _github_com_prometheus_client_golang_prometheus_GaugeFunc struct {
	IValue    interface{}
	WCollect  func(a0 chan<- prometheus.Metric)
	WDesc     func() *prometheus.Desc
	WDescribe func(a0 chan<- *prometheus.Desc)
	WWrite    func(a0 *io_prometheus_client.Metric) error
}

func (W _github_com_prometheus_client_golang_prometheus_GaugeFunc) Collect(a0 chan<- prometheus.Metric) {
	W.WCollect(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_GaugeFunc) Desc() *prometheus.Desc {
	return W.WDesc()
}
func (W _github_com_prometheus_client_golang_prometheus_GaugeFunc) Describe(a0 chan<- *prometheus.Desc) {
	W.WDescribe(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_GaugeFunc) Write(a0 *io_prometheus_client.Metric) error {
	return W.WWrite(a0)
}

// _github_com_prometheus_client_golang_prometheus_Histogram is an interface wrapper for Histogram type
type _github_com_prometheus_client_golang_prometheus_Histogram struct {
	IValue    interface{}
	WCollect  func(a0 chan<- prometheus.Metric)
	WDesc     func() *prometheus.Desc
	WDescribe func(a0 chan<- *prometheus.Desc)
	WObserve  func(a0 float64)
	WWrite    func(a0 *io_prometheus_client.Metric) error
}

func (W _github_com_prometheus_client_golang_prometheus_Histogram) Collect(a0 chan<- prometheus.Metric) {
	W.WCollect(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_Histogram) Desc() *prometheus.Desc {
	return W.WDesc()
}
func (W _github_com_prometheus_client_golang_prometheus_Histogram) Describe(a0 chan<- *prometheus.Desc) {
	W.WDescribe(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_Histogram) Observe(a0 float64) {
	W.WObserve(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_Histogram) Write(a0 *io_prometheus_client.Metric) error {
	return W.WWrite(a0)
}

// _github_com_prometheus_client_golang_prometheus_Metric is an interface wrapper for Metric type
type _github_com_prometheus_client_golang_prometheus_Metric struct {
	IValue interface{}
	WDesc  func() *prometheus.Desc
	WWrite func(a0 *io_prometheus_client.Metric) error
}

func (W _github_com_prometheus_client_golang_prometheus_Metric) Desc() *prometheus.Desc {
	return W.WDesc()
}
func (W _github_com_prometheus_client_golang_prometheus_Metric) Write(a0 *io_prometheus_client.Metric) error {
	return W.WWrite(a0)
}

// _github_com_prometheus_client_golang_prometheus_Observer is an interface wrapper for Observer type
type _github_com_prometheus_client_golang_prometheus_Observer struct {
	IValue   interface{}
	WObserve func(a0 float64)
}

func (W _github_com_prometheus_client_golang_prometheus_Observer) Observe(a0 float64) {
	W.WObserve(a0)
}

// _github_com_prometheus_client_golang_prometheus_ObserverVec is an interface wrapper for ObserverVec type
type _github_com_prometheus_client_golang_prometheus_ObserverVec struct {
	IValue                    interface{}
	WCollect                  func(a0 chan<- prometheus.Metric)
	WCurryWith                func(a0 prometheus.Labels) (prometheus.ObserverVec, error)
	WDescribe                 func(a0 chan<- *prometheus.Desc)
	WGetMetricWith            func(a0 prometheus.Labels) (prometheus.Observer, error)
	WGetMetricWithLabelValues func(lvs ...string) (prometheus.Observer, error)
	WMustCurryWith            func(a0 prometheus.Labels) prometheus.ObserverVec
	WWith                     func(a0 prometheus.Labels) prometheus.Observer
	WWithLabelValues          func(a0 ...string) prometheus.Observer
}

func (W _github_com_prometheus_client_golang_prometheus_ObserverVec) Collect(a0 chan<- prometheus.Metric) {
	W.WCollect(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_ObserverVec) CurryWith(a0 prometheus.Labels) (prometheus.ObserverVec, error) {
	return W.WCurryWith(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_ObserverVec) Describe(a0 chan<- *prometheus.Desc) {
	W.WDescribe(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_ObserverVec) GetMetricWith(a0 prometheus.Labels) (prometheus.Observer, error) {
	return W.WGetMetricWith(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_ObserverVec) GetMetricWithLabelValues(lvs ...string) (prometheus.Observer, error) {
	return W.WGetMetricWithLabelValues(lvs...)
}
func (W _github_com_prometheus_client_golang_prometheus_ObserverVec) MustCurryWith(a0 prometheus.Labels) prometheus.ObserverVec {
	return W.WMustCurryWith(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_ObserverVec) With(a0 prometheus.Labels) prometheus.Observer {
	return W.WWith(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_ObserverVec) WithLabelValues(a0 ...string) prometheus.Observer {
	return W.WWithLabelValues(a0...)
}

// _github_com_prometheus_client_golang_prometheus_Registerer is an interface wrapper for Registerer type
type _github_com_prometheus_client_golang_prometheus_Registerer struct {
	IValue        interface{}
	WMustRegister func(a0 ...prometheus.Collector)
	WRegister     func(a0 prometheus.Collector) error
	WUnregister   func(a0 prometheus.Collector) bool
}

func (W _github_com_prometheus_client_golang_prometheus_Registerer) MustRegister(a0 ...prometheus.Collector) {
	W.WMustRegister(a0...)
}
func (W _github_com_prometheus_client_golang_prometheus_Registerer) Register(a0 prometheus.Collector) error {
	return W.WRegister(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_Registerer) Unregister(a0 prometheus.Collector) bool {
	return W.WUnregister(a0)
}

// _github_com_prometheus_client_golang_prometheus_Summary is an interface wrapper for Summary type
type _github_com_prometheus_client_golang_prometheus_Summary struct {
	IValue    interface{}
	WCollect  func(a0 chan<- prometheus.Metric)
	WDesc     func() *prometheus.Desc
	WDescribe func(a0 chan<- *prometheus.Desc)
	WObserve  func(a0 float64)
	WWrite    func(a0 *io_prometheus_client.Metric) error
}

func (W _github_com_prometheus_client_golang_prometheus_Summary) Collect(a0 chan<- prometheus.Metric) {
	W.WCollect(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_Summary) Desc() *prometheus.Desc {
	return W.WDesc()
}
func (W _github_com_prometheus_client_golang_prometheus_Summary) Describe(a0 chan<- *prometheus.Desc) {
	W.WDescribe(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_Summary) Observe(a0 float64) {
	W.WObserve(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_Summary) Write(a0 *io_prometheus_client.Metric) error {
	return W.WWrite(a0)
}

// _github_com_prometheus_client_golang_prometheus_TransactionalGatherer is an interface wrapper for TransactionalGatherer type
type _github_com_prometheus_client_golang_prometheus_TransactionalGatherer struct {
	IValue  interface{}
	WGather func() (_ []*io_prometheus_client.MetricFamily, done func(), err error)
}

func (W _github_com_prometheus_client_golang_prometheus_TransactionalGatherer) Gather() (_ []*io_prometheus_client.MetricFamily, done func(), err error) {
	return W.WGather()
}

// _github_com_prometheus_client_golang_prometheus_UntypedFunc is an interface wrapper for UntypedFunc type
type _github_com_prometheus_client_golang_prometheus_UntypedFunc struct {
	IValue    interface{}
	WCollect  func(a0 chan<- prometheus.Metric)
	WDesc     func() *prometheus.Desc
	WDescribe func(a0 chan<- *prometheus.Desc)
	WWrite    func(a0 *io_prometheus_client.Metric) error
}

func (W _github_com_prometheus_client_golang_prometheus_UntypedFunc) Collect(a0 chan<- prometheus.Metric) {
	W.WCollect(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_UntypedFunc) Desc() *prometheus.Desc {
	return W.WDesc()
}
func (W _github_com_prometheus_client_golang_prometheus_UntypedFunc) Describe(a0 chan<- *prometheus.Desc) {
	W.WDescribe(a0)
}
func (W _github_com_prometheus_client_golang_prometheus_UntypedFunc) Write(a0 *io_prometheus_client.Metric) error {
	return W.WWrite(a0)
}
